# ---
# name: Collection test, build and deploy
# on: [push, pull_request]

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           submodules: recursive
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v2
#         with:
#           python-version: ${{ matrix.python-version }}
#       - name: Install dependencies
#         run: |
#           python3 -m pip install --upgrade pip
#           python3 -m pip install -r ./hack/build/requirements.txt

#       - name: Test with molecule
#         run: |
#           molecule test

#       #- name: Run unit tests
#       #  env:
#       #    VERBOSE: true
#       #  run: |
#       #    echo "TODO"

#   build:
#     runs-on: ubuntu-latest
#     needs: [test]
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 5
#           submodules: recursive

#       - name: Get version
#         id: get_version
#         run: echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}

#       # - name: Build Collection
#       #   env:
#       #     RELEASE_VERSION: ${{ steps.get_version.outputs.VERSION }}
#       #   run: |
#       #     echo RELEASE_VERSION=[$RELEASE_VERSION]
#       #     ansible-playbook hack/build/deploy.yml \
#       #       -e tag="$RELEASE_VERSION" \
#       #       -t build
#       #     ls build/mtulio-*.tar.gz

#       # - name: Save artifacts
#       #   uses: actions/upload-artifact@v2
#       #   with:
#       #     name: mtulio-cloud_compute-${{ steps.get_version.outputs.VERSION }}.tar.gz
#       #     path: |
#       #       build

#   deploy-tag-to-galaxy:
#     if: startsWith(github.ref, 'refs/tags/')
#     runs-on: ubuntu-latest
#     needs: [build]
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 5
#           submodules: recursive

#       - name: Get version
#         id: get_version
#         run: echo ::set-output name=VERSION::${GITHUB_REF#refs/*/}

#       # - name: Deploy to Galaxy
#       #   env:
#       #     RELEASE_VERSION: ${{ steps.get_version.outputs.VERSION }}
#       #     ANSIBLE_GALAXY_TOKEN: ${{ secrets.ANSIBLE_GALAXY_TOKEN }}
#       #   run: |
#       #     echo VERSION=[$RELEASE_VERSION]
#       #     ansible-playbook hack/build/deploy.yml \
#       #       -e tag="${RELEASE_VERSION}" \
#       #       -t build,deploy

#       # - name: Save artifacts
#       #   uses: actions/upload-artifact@v2
#       #   with:
#       #     name: mtulio-cloud_compute-${{ steps.get_version.outputs.VERSION }}.tar.gz
#       #     path: |
#       #       build
